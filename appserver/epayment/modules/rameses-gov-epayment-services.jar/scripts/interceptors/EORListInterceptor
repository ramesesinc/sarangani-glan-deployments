import com.rameses.annotations.*
import com.rameses.util.*
import com.rameses.common.*
import treasury.utils.*;

class EORListInterceptor {

    @After(pattern="QueryService.getNodeList", eval="#{ args[0]._schemaname == 'eor' }")
    public void getNodes( evt ) { 
        def x = evt.args[0];
        def result = evt.result;
        result << [  title: 'Pending', state:'pending',  ];        
        result << [  title: 'Unremitted', state:'unremitted',  ];
        result << [  title: 'Remitted', state:'remitted' ];
    }

    @Before(pattern="QueryService.getList", eval="#{ args[0]._schemaname == 'eor' }")
    public void loadList(def evt) {
        def o = evt.args[0];

        if( !o.node?.state ) return;

        def m = [:]; 
        def str = null;
        switch( o.node.state ) {
            case 'pending':
                str = " state = 'PENDING' ";  
                break;

            case 'unremitted':
                str = " state = 'POSTED' AND  remittanceid IS NULL ";  
                break;

            default:
                str = " state = 'POSTED' AND  remittanceid IS NOT NULL ";  
                break;
        }
        //o.debug = true;

        if( o.where ) {
            o.where[0] = str + " AND " + o.where[0];    
            o.where[1].putAll( m );
        }
        else {
            o.where = [str, m];
        } 
    }   


}
